{"version":3,"file":"static/js/377.d9eed4f5.chunk.js","mappings":"iMAQaA,EACX,SAACC,GAAD,OAAmC,SAACC,GAClC,OAAiCC,EAAAA,EAAAA,KAAzBC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdC,GAAWC,EAAAA,EAAAA,MACjB,IAAKH,EACH,OAAO,SAAC,KAAD,CAAUI,GAAG,SAASC,SAAO,IAEtC,IAAQC,EAAuBR,EAAvBQ,SACR,OAD+BR,EAAbS,WACDN,EAASO,MAA8B,MAAtBN,EAASO,UAClC,SAAC,KAAD,CAAUL,GAAG,IAAIC,SAAO,KAE1B,SAACR,GAAD,6BAAeC,IAAf,aAAyBQ,IACjC,CAXD,EAaWI,EAAgBd,GAAiB,SAACE,GAE7C,OADqBA,EAAbQ,QAET,IAEyBV,GAAiB,SAACE,GAE1C,OADqBA,EAAbQ,QAET,G,uFCjBKK,EAA4B,CAChCX,YAAY,EACZC,SAAU,CACRW,GAAI,KACJC,SAAU,GACVC,SAAU,GACVN,KAAM,QACNO,KAAM,KAIH,GAAyBC,EAAAA,EAAAA,IAC9B,SAACC,EAAKC,GAAN,eAAC,UACIP,GADL,IAEEQ,eAAgB,SAACC,GAAD,OAAUH,EAAI,CAAEhB,SAAUmB,EAAMpB,YAAY,GAA5C,EAChBqB,aAAc,kBAAMJ,GAAI,UAAKN,GAAf,GAHhB,GAKA,kBANYZ,GAAP,c,0KCrBDuB,EAAc,kBAAM,yCAAN,ECDpB,EDGeC,EAAAA,MAAW,kBACxB,SAAC,KAAD,CAAehB,SAAS,WAAxB,UACE,SAACe,EAAD,KAFsB,G","sources":["components/core/PrivateRoute/index.tsx","pages/authen/Authen.zustand.ts","pages/payment/PaymentPage.tsx","pages/payment/index.ts"],"sourcesContent":["import { useAuthenStore } from \"pages/authen\";\nimport React from \"react\";\nimport { Navigate, useLocation } from \"react-router-dom\";\n\nexport interface IPrivateRoute {\n  userRole: \"admin\" | \"customer\";\n  children: React.ReactNode | React.ReactElement | any;\n}\nexport const withPrivateRoute =\n  (Comp: React.FC<IPrivateRoute>) => (props: IPrivateRoute) => {\n    const { isLoggedIn, userInfo } = useAuthenStore();\n    const location = useLocation();\n    if (!isLoggedIn) {\n      return <Navigate to=\"/login\" replace />;\n    }\n    const { children, userRole } = props;\n    if (userRole !== userInfo.role && location.pathname !== \"/\") {\n      return <Navigate to=\"/\" replace />;\n    }\n    return <Comp {...{ ...props }}>{children}</Comp>;\n  };\n\nexport const CustomerRoute = withPrivateRoute((props) => {\n  const { children } = props;\n  return children;\n});\n\nexport const AdminRoute = withPrivateRoute((props) => {\n  const { children } = props;\n  return children;\n});\n","import { UserType } from \"pages/user\";\nimport { createPersistStore } from \"zustand-store\";\n\ninterface AuthenState {\n  isLoggedIn: boolean;\n  userInfo: UserType;\n}\n\ninterface AuthenActions {\n  actionLoggedIn: (user: UserType) => any;\n  actionLogout: () => any;\n}\n\nconst initialState: AuthenState = {\n  isLoggedIn: false,\n  userInfo: {\n    id: \"-1\",\n    username: \"\",\n    password: \"\",\n    role: \"guest\",\n    name: \"\",\n  },\n};\n\nexport const [useAuthenStore] = createPersistStore<AuthenState & AuthenActions>(\n  (set, get) => ({\n    ...initialState,\n    actionLoggedIn: (user) => set({ userInfo: user, isLoggedIn: true }),\n    actionLogout: () => set({ ...initialState }),\n  }),\n  \"useAuthenStore\"\n);\n","import { CustomerRoute } from \"components/core/PrivateRoute\";\nimport React from \"react\";\n\nconst PaymentPage = () => <div>Payment page</div>;\n\nexport default React.memo(() => (\n  <CustomerRoute userRole=\"customer\">\n    <PaymentPage />\n  </CustomerRoute>\n));\n","import PaymentPage from \"./PaymentPage\";\n\nexport default PaymentPage;\n"],"names":["withPrivateRoute","Comp","props","useAuthenStore","isLoggedIn","userInfo","location","useLocation","to","replace","children","userRole","role","pathname","CustomerRoute","initialState","id","username","password","name","createPersistStore","set","get","actionLoggedIn","user","actionLogout","PaymentPage","React"],"sourceRoot":""}