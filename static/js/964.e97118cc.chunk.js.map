{"version":3,"file":"static/js/964.e97118cc.chunk.js","mappings":"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","sources":["components/core/Loading/index.tsx","components/core/PrivateRoute/index.tsx","env/index.ts","http-request/index.ts","pages/authen/Authen.zustand.ts","components/core/Icons/SettingIcon.tsx","pages/home/components/HomeHeader/index.tsx","pages/home/HomePage.Admin.tsx","pages/category/components/CategoryList/CategoryList.services.ts","pages/category/components/CategoryList/CategoryList.tsx","pages/category/components/CategoryList/CategoryList.hook.ts","pages/category/components/CategoryList/index.tsx","pages/home/HomePage.Customer.tsx","pages/home/HomePage.tsx","pages/home/index.tsx"],"sourcesContent":["import React from \"react\";\n\nconst Loading: React.FC<\n  React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > & {\n    className?: string;\n    isCenterAbsolute?: boolean;\n  }\n> = ({ className, isCenterAbsolute, ...rest }) => (\n  <div\n    className={`${\n      isCenterAbsolute && \"h-8 flex items-center justify-center\"\n    } ${className}`}\n    {...rest}\n  >\n    <i className=\"fa-solid fa-spinner fa-spin-pulse fa-xl text-primary-color\" />\n  </div>\n);\nLoading.defaultProps = {\n  className: \"\",\n  isCenterAbsolute: true,\n};\n\nexport default React.memo(Loading);\n","import { useAuthenStore } from \"pages/authen\";\nimport React from \"react\";\nimport { Navigate, useLocation } from \"react-router-dom\";\n\nexport interface IPrivateRoute {\n  userRole: \"admin\" | \"customer\";\n  children: React.ReactNode | React.ReactElement | any;\n}\nexport const withPrivateRoute =\n  (Comp: React.FC<IPrivateRoute>) => (props: IPrivateRoute) => {\n    const { isLoggedIn, userInfo } = useAuthenStore();\n    const location = useLocation();\n    if (!isLoggedIn) {\n      return <Navigate to=\"/login\" replace />;\n    }\n    const { children, userRole } = props;\n    if (userRole !== userInfo.role && location.pathname !== \"/\") {\n      return <Navigate to=\"/\" replace />;\n    }\n    return <Comp {...{ ...props }}>{children}</Comp>;\n  };\n\nexport const CustomerRoute = withPrivateRoute((props) => {\n  const { children } = props;\n  return children;\n});\n\nexport const AdminRoute = withPrivateRoute((props) => {\n  const { children } = props;\n  return children;\n});\n","export const ENV = {\n  PUBLIC_URL: process.env.PUBLIC_URL || \"\",\n  ASSETS_PATH: `${process.env.PUBLIC_URL || \"\"}/assets`,\n  REACT_APP_API_DOMAIN_URL:\n    process.env.REACT_APP_API_DOMAIN_URL || \"http://localhost:3000/api\",\n  PORT: process.env.PORT || 8080,\n  REACT_APP_WS_PATH: process.env.REACT_APP_WS_PATH || \"\",\n};\n","class HTTP {\n  baseURL: string;\n\n  controller: AbortController;\n\n  requestInit: RequestInit;\n\n  constructor({ baseURL }: { baseURL: string }) {\n    this.baseURL = baseURL;\n    this.controller = new AbortController();\n    this.requestInit = {\n      cache: \"no-cache\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"*\",\n        \"Access-Control-Allow-Headers\": \"*\",\n      },\n      credentials: \"same-origin\", // include, *same-origin, omit\n      redirect: \"follow\", // manual, *follow, error\n      referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    };\n  }\n\n  get(url: string) {\n    const { signal } = this.controller;\n    return fetch(`${this.baseURL}/${url}`, {\n      ...this.requestInit,\n      method: \"GET\",\n      signal,\n    })\n      .then((res) => res.json())\n      .catch((error) => {\n        throw new Error(error);\n      });\n  }\n\n  post(url: string, data?: any) {\n    const { signal } = this.controller;\n    return fetch(`${this.baseURL}/${url}`, {\n      ...this.requestInit,\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n      signal,\n    })\n      .then((res) => res.json())\n      .catch((error) => {\n        throw new Error(error);\n      });\n  }\n\n  put(url: string, data?: any) {\n    const { signal } = this.controller;\n    return fetch(`${this.baseURL}/${url}`, {\n      ...this.requestInit,\n      method: \"PUT\", // *GET, POST, PUT, DELETE, etc.\n      body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n      signal,\n    })\n      .then((res) => res.json())\n      .catch((error) => {\n        throw new Error(error);\n      });\n  }\n\n  patch(url: string, data?: any) {\n    const { signal } = this.controller;\n    return fetch(`${this.baseURL}/${url}`, {\n      ...this.requestInit,\n      method: \"PATCH\", // *GET, POST, PUT, DELETE, etc.\n      body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n      signal,\n    })\n      .then((res) => res.json())\n      .catch((error) => {\n        throw new Error(error);\n      });\n  }\n\n  delete(url: string, data?: any) {\n    const { signal } = this.controller;\n    return fetch(`${this.baseURL}/${url}`, {\n      ...this.requestInit,\n      method: \"DELETE\", // *GET, POST, PUT, DELETE, etc.\n      body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n      signal,\n    })\n      .then((res) => res.json())\n      .catch((error) => {\n        throw new Error(error);\n      });\n  }\n\n  abort() {\n    this.controller.abort();\n  }\n}\n\nexport default HTTP;\n","import { UserType } from \"pages/user\";\nimport { createPersistStore } from \"zustand-store\";\n\ninterface AuthenState {\n  isLoggedIn: boolean;\n  userInfo: UserType;\n}\n\ninterface AuthenActions {\n  actionLoggedIn: (user: UserType) => any;\n  actionLogout: () => any;\n}\n\nconst initialState: AuthenState = {\n  isLoggedIn: false,\n  userInfo: {\n    id: \"-1\",\n    username: \"\",\n    password: \"\",\n    role: \"guest\",\n    name: \"\",\n  },\n};\n\nexport const [useAuthenStore] = createPersistStore<AuthenState & AuthenActions>(\n  (set, get) => ({\n    ...initialState,\n    actionLoggedIn: (user) => set({ userInfo: user, isLoggedIn: true }),\n    actionLogout: () => set({ ...initialState }),\n  }),\n  \"useAuthenStore\"\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst SettingIcon = () => (\n  <Link to=\"/setting\">\n    <i className=\"fa-solid fa-bars text-lg\" />\n  </Link>\n);\n\nexport default React.memo(SettingIcon);\n","import SettingIcon from \"components/core/Icons/SettingIcon\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst HomeHeader = React.memo(({ leftTitle }: { leftTitle: string }) => (\n  <div className=\"flex gap-4 p-2 justify-between items-center\">\n    <div className=\"grid gap-2 items-center location\">\n      <i className=\"fa-solid fa-location-dot text-primary-color text-base\" />\n      <div className=\"text-base font-medium\">{leftTitle}</div>\n    </div>\n    <div className=\"grid gap-4 grid-cols-2\">\n      <Link to=\"/message\">\n        <i className=\"fa-regular fa-envelope text-lg\" />\n      </Link>\n      <SettingIcon />\n    </div>\n  </div>\n));\n\nexport default HomeHeader;\n","import React from \"react\";\nimport HomeHeader from \"./components/HomeHeader\";\n\nconst HomePageAdmin: React.FC = () => (\n  <div>\n    <HomeHeader leftTitle=\"Admin page\" />\n  </div>\n);\n\nexport default React.memo(HomePageAdmin);\n","import { ENV } from \"env\";\nimport HTTP from \"http-request\";\nimport { CategoryResponse } from \"./CategoryList.typings\";\n\nconst http = new HTTP({ baseURL: `${ENV.REACT_APP_API_DOMAIN_URL}/category` });\n\nexport const apiGetCategories: () => Promise<CategoryResponse> = () =>\n  http.get(\"\");\n","import Loading from \"components/core/Loading\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQueryCategories } from \"./CategoryList.hook\";\n\nconst CategoryList: React.FC = () => {\n  const { isLoading, data: categories = [] } = useQueryCategories();\n  return (\n    <div className=\"grid grid-cols-4 gap-4 items-center justify-center mt-4\">\n      {isLoading && <Loading />}\n      {categories.map(({ id, name, imgURL }) => (\n        <Link key={id} className=\"\" to={`/merchant?categoryId=${id}`}>\n          <div className=\"h-24\">\n            <img src={imgURL} alt={name} />\n          </div>\n          <div className=\"text-center\">{name}</div>\n        </Link>\n      ))}\n    </div>\n  );\n};\n\nexport default React.memo(CategoryList);\n","import { useQuery, UseQueryResult } from \"@tanstack/react-query\";\nimport { Category } from \"pages/category/components/Category\";\nimport { apiGetCategories } from \"./CategoryList.services\";\n\nexport const useQueryCategories: () => UseQueryResult<\n  Category[],\n  unknown\n> = () => {\n  const query = useQuery({\n    queryFn: async () => {\n      const res = await apiGetCategories();\n      return res.data;\n    },\n    queryKey: [\"categories\"],\n  });\n  return query;\n};\n","import CategoryList from \"./CategoryList\";\n\nexport default CategoryList;\n","import React from \"react\";\nimport CategoryList from \"pages/category/components/CategoryList\";\nimport HomeHeader from \"./components/HomeHeader\";\n\nconst HomePageCustomer: React.FC = () => (\n  <div className=\"home-page\">\n    <HomeHeader leftTitle=\"Topaz City\" />\n    <CategoryList />\n  </div>\n);\n\nexport default React.memo(HomePageCustomer);\n","import { CustomerRoute } from \"components/core/PrivateRoute\";\nimport { useAuthenStore } from \"pages/authen\";\nimport React from \"react\";\nimport HomePageAdmin from \"./HomePage.Admin\";\nimport HomePageCustomer from \"./HomePage.Customer\";\nimport \"./HomePage.styles.scss\";\n\nconst HomePageGuest: React.FC = () => <div>Welcome to baemin!</div>;\n\nconst HomePage: React.FC = () => {\n  const {\n    userInfo: { role },\n  } = useAuthenStore();\n  switch (role) {\n    case \"customer\":\n      return <HomePageCustomer />;\n    case \"admin\":\n      return <HomePageAdmin />;\n    default:\n      return <HomePageGuest />;\n  }\n};\n\nexport default React.memo(() => (\n  <CustomerRoute userRole=\"customer\">\n    <HomePage />\n  </CustomerRoute>\n));\n","import HomePage from \"./HomePage\";\n\nexport default HomePage;\n"],"names":["Loading","className","isCenterAbsolute","rest","defaultProps","React","withPrivateRoute","Comp","props","useAuthenStore","isLoggedIn","userInfo","location","useLocation","to","replace","children","userRole","role","pathname","CustomerRoute","ENV","PUBLIC_URL","process","ASSETS_PATH","REACT_APP_API_DOMAIN_URL","PORT","REACT_APP_WS_PATH","HTTP","baseURL","controller","requestInit","this","AbortController","cache","mode","headers","credentials","redirect","referrerPolicy","url","signal","fetch","method","then","res","json","catch","error","Error","data","body","JSON","stringify","abort","initialState","id","username","password","name","createPersistStore","set","get","actionLoggedIn","user","actionLogout","SettingIcon","leftTitle","HomePageAdmin","http","CategoryList","query","useQuery","queryFn","queryKey","useQueryCategories","isLoading","categories","map","imgURL","src","alt","HomePageCustomer","HomePageGuest","HomePage"],"sourceRoot":""}